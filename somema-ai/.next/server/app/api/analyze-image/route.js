(()=>{var e={};e.id=9574,e.ids=[9574],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},8619:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>f,routeModule:()=>p,serverHooks:()=>m,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>g});var s={};t.r(s),t.d(s,{POST:()=>u});var a=t(96559),o=t(48088),i=t(37719),n=t(32190),c=t(66437),l=t(49485);async function u(e){try{let{imageUrl:r,skipCredits:t}=await e.json();if(!r)return n.NextResponse.json({error:"Image URL is required"},{status:400});let s=e.headers.get("authorization");if(!s)return n.NextResponse.json({error:"Authorization header required"},{status:401});let a=s.replace("Bearer ","");if(!a)return n.NextResponse.json({error:"Invalid user ID"},{status:401});let o=await (0,l.eM)(a)||t,i=(0,c.UU)("https://yfmypikqgegvookjzvyv.supabase.co",process.env.SUPABASE_SERVICE_ROLE_KEY),u=null;if(o)console.log("\uD83D\uDC51 Admin user - bypassing credit check for image analysis");else{let{data:e,error:r}=await i.from("user_profiles").select("post_generation_credits, subscription_plan").eq("user_id",a).single();if(r&&"PGRST116"===r.code){console.log("User not found in user_profiles table, creating with default credits...");let{data:t,error:s}=await i.from("user_profiles").insert({user_id:a,post_generation_credits:3,subscription_plan:"free"}).select("post_generation_credits, subscription_plan").single();if(s)return console.error("❌ Error creating user profile:",s),n.NextResponse.json({error:"No post generation credits remaining. Please upgrade your plan or purchase more credits.",creditsRemaining:0},{status:402});e=t,r=null}else if(r)return console.error("Error fetching user credits:",r),n.NextResponse.json({error:"No post generation credits remaining. Please upgrade your plan or purchase more credits.",creditsRemaining:0},{status:402});u=e;let t=u?.post_generation_credits||0;console.log("✅ Image analysis is free. User credits available:",t)}let p=process.env.OPENAI_API_KEY;if(!p)return n.NextResponse.json({error:"OpenAI API key not configured"},{status:500});let d=r;if(r.startsWith("data:image/"))d=r,console.log("Using data URL directly");else if(r.startsWith("blob:"))return console.error("Blob URL received on server side - this should not happen"),n.NextResponse.json({error:"Invalid image URL format. Please try uploading the image again."},{status:400});else try{console.log("Downloading image from URL:",r);let e=await fetch(r,{headers:{"User-Agent":"Mozilla/5.0 (compatible; SomemaAI/1.0)"},signal:AbortSignal.timeout(3e4)});if(!e.ok)throw Error(`Failed to download image: ${e.status}`);let t=await e.arrayBuffer(),s=Buffer.from(t).toString("base64"),a=e.headers.get("content-type")||"image/jpeg";d=`data:${a};base64,${s}`,console.log("Successfully converted image to base64")}catch(e){return console.error("Failed to download image:",e),n.NextResponse.json({error:"Failed to download image from URL. Please try uploading the image again."},{status:400})}let g=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${p}`,"Content-Type":"application/json"},body:JSON.stringify({model:"gpt-4o",messages:[{role:"system",content:`You are an expert product photographer and image analyst. Your job is to analyze product images with extreme detail and specificity.

IMPORTANT: You must be extremely specific about what you see. Do NOT use generic terms like "product" or "item". 

If you see sneakers, you MUST say "sneakers" and include details like:
- Brand (Nike, Adidas, etc.)
- Color (white, black, red, etc.)
- Style (running, casual, athletic, etc.)
- Material (leather, mesh, canvas, etc.)

If you see a handbag, you MUST say "handbag" and include:
- Type (tote, crossbody, clutch, etc.)
- Color and material
- Hardware details (gold, silver, etc.)

Examples of GOOD responses:
- "White Nike Air Max 270 sneakers with black swoosh on clean white background"
- "Red leather crossbody handbag with gold hardware and chain strap"
- "Black iPhone 14 Pro smartphone on white surface"

Examples of BAD responses:
- "Product on background" (too generic)
- "Item for sale" (not specific)
- "Professional product photo" (no details)

Return ONLY a JSON object with:
{
  "caption": "Detailed description of exactly what you see",
  "classification": "Specific product type (sneakers, handbag, phone, etc.)",
  "tags": ["specific", "relevant", "tags", "based", "on", "what", "you", "see"],
  "confidence": 0.9
}

Be as specific as possible. If you're not sure about a detail, still be specific about what you can see.`},{role:"user",content:[{type:"text",text:"Please analyze this image and provide a detailed caption, classification, and relevant tags."},{type:"image_url",image_url:{url:d}}]}],max_tokens:500,temperature:.3})});if(!g.ok){let e=await g.text();console.error("OpenAI API error response:",e);try{let r=JSON.parse(e);if(r.error?.message)return n.NextResponse.json({error:`OpenAI API error: ${r.error.message}`},{status:500})}catch(e){}return n.NextResponse.json({error:`OpenAI API error: ${g.status} - ${e.substring(0,200)}`},{status:500})}let m=(await g.json()).choices[0].message.content.trim();try{let e=m.trim();e.startsWith("```json")?e=e.replace(/^```json\n/,"").replace(/\n```$/,""):e.startsWith("```")&&(e=e.replace(/^```\n/,"").replace(/\n```$/,""));let r=JSON.parse(e);if(console.log("Parsed CLIP analysis:",r),!r.caption||!r.classification)throw Error("Missing required fields in CLIP response");return console.log("✅ Image analysis completed (free service). Credits remaining:",u?.post_generation_credits||0),n.NextResponse.json({success:!0,analysis:{caption:r.caption,classification:r.classification,tags:r.tags||[],confidence:r.confidence||.8}})}catch(r){console.error("Failed to parse CLIP analysis response:",r),console.error("Raw content was:",m);let e=function(e){console.log("Extracting info from text:",e);let r=e.toLowerCase(),t="product",s=["product"];for(let e of["sneaker","sneakers","shoe","shoes","boot","boots","sandals","flip flops","handbag","bag","purse","backpack","wallet","phone","smartphone","laptop","computer","tablet","watch","jewelry","ring","necklace","earrings","shirt","t-shirt","pants","jeans","dress","skirt","hat","cap","sunglasses","glasses"])if(r.includes(e)){t=e,s.push(e);break}let a=["white","black","red","blue","green","yellow","pink","purple","orange","brown","gray","grey"];for(let e of a)r.includes(e)&&s.push(e);for(let e of["nike","adidas","puma","reebok","converse","vans","jordan","apple","samsung","sony"])r.includes(e)&&s.push(e);let o=`A ${t}`;return(s.includes("white")||s.includes("black"))&&(o+=` in ${s.find(e=>a.includes(e))} color`),{caption:o+=" on a clean background",classification:t,tags:s.slice(0,10),confidence:.6}}(m);return console.log("✅ Image analysis completed (free service - fallback). Credits remaining:",u?.post_generation_credits||0),n.NextResponse.json({success:!0,analysis:e})}}catch(e){return console.error("Image analysis error:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/analyze-image/route",pathname:"/api/analyze-image",filename:"route",bundlePath:"app/api/analyze-image/route"},resolvedPagePath:"/Users/thanveerulaklam/Desktop/Projects/Somema/somema-ai/app/api/analyze-image/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:d,workUnitAsyncStorage:g,serverHooks:m}=p;function f(){return(0,i.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:g})}},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11997:e=>{"use strict";e.exports=require("punycode")},27910:e=>{"use strict";e.exports=require("stream")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},34631:e=>{"use strict";e.exports=require("tls")},39727:()=>{},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},47990:()=>{},49485:(e,r,t)=>{"use strict";t.d(r,{CX:()=>c,X2:()=>i,eM:()=>n});let s=(0,t(66437).UU)("https://yfmypikqgegvookjzvyv.supabase.co",process.env.SUPABASE_SERVICE_ROLE_KEY),a=new Map;function o(e){return/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e)}async function i(e){try{if(!o(e))return console.error("❌ Invalid UUID format for admin check:",e),!1;let r=a.get(e);if(r&&Date.now()-r.timestamp<3e5)return console.log("\uD83D\uDD0D Using cached admin check for user:",e,"Result:",r.isAdmin),r.isAdmin;console.log("\uD83D\uDD0D Checking admin access for user:",e);let{data:t,error:i}=await s.rpc("get_user_admin_info",{user_uuid:e});if(i)return console.error("❌ Admin check error:",i),a.set(e,{isAdmin:!1,timestamp:Date.now()}),!1;if(!t||!Array.isArray(t)||0===t.length)return console.log("ℹ️ No admin info found for user:",e),a.set(e,{isAdmin:!1,timestamp:Date.now()}),!1;let n=t[0];if("boolean"!=typeof n.is_admin||"boolean"!=typeof n.is_active)return console.error("❌ Invalid admin data structure:",n),a.set(e,{isAdmin:!1,timestamp:Date.now()}),!1;let c=n.is_admin&&n.is_active;return console.log("✅ Admin check result:",{userId:e,isAdmin:c,role:n.role,isActive:n.is_active}),a.set(e,{isAdmin:c,timestamp:Date.now()}),c}catch(r){return console.error("❌ Error checking admin access:",r),a.set(e,{isAdmin:!1,timestamp:Date.now()}),!1}}async function n(e){return await i(e)}async function c(e){try{if(!o(e))return console.error("❌ Invalid UUID format for admin info check:",e),{isAdmin:!1};let{data:r,error:t}=await s.rpc("get_user_admin_info",{user_uuid:e});if(t||!r||!Array.isArray(r)||0===r.length)return{isAdmin:!1};let a=r[0];if("boolean"!=typeof a.is_admin||"boolean"!=typeof a.is_active)return console.error("❌ Invalid admin data structure:",a),{isAdmin:!1};return{isAdmin:a.is_admin&&a.is_active,role:a.role,permissions:a.permissions}}catch(e){return console.error("Error getting admin info:",e),{isAdmin:!1}}}},55511:e=>{"use strict";e.exports=require("crypto")},55591:e=>{"use strict";e.exports=require("https")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},74075:e=>{"use strict";e.exports=require("zlib")},78335:()=>{},79428:e=>{"use strict";e.exports=require("buffer")},79551:e=>{"use strict";e.exports=require("url")},81630:e=>{"use strict";e.exports=require("http")},91645:e=>{"use strict";e.exports=require("net")},94735:e=>{"use strict";e.exports=require("events")},96487:()=>{}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[4447,580,6437],()=>t(8619));module.exports=s})();