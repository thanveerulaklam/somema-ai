(()=>{var e={};e.id=5932,e.ids=[5932],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},8805:(e,t,s)=>{"use strict";function r(e,t){let s=new Date(e);return"monthly"===t?(s.setMonth(s.getMonth()+1),s.getDate()!==e.getDate()&&s.setDate(0)):"yearly"===t&&(s.setFullYear(s.getFullYear()+1),s.getDate()!==e.getDate()&&s.setDate(0)),s.toISOString()}s.d(t,{$A:()=>r})},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11997:e=>{"use strict";e.exports=require("punycode")},12412:e=>{"use strict";e.exports=require("assert")},21820:e=>{"use strict";e.exports=require("os")},27910:e=>{"use strict";e.exports=require("stream")},28354:e=>{"use strict";e.exports=require("util")},29021:e=>{"use strict";e.exports=require("fs")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{"use strict";e.exports=require("path")},34631:e=>{"use strict";e.exports=require("tls")},39727:()=>{},43564:(e,t,s)=>{"use strict";s.r(t),s.d(t,{patchFetch:()=>U,routeModule:()=>N,serverHooks:()=>C,workAsyncStorage:()=>P,workUnitAsyncStorage:()=>$});var r={};s.r(r),s.d(r,{POST:()=>g});var i=s(96559),o=s(48088),n=s(37719),a=s(32190),c=s(55511),u=s.n(c),l=s(66437),p=s(8805),d=s(95457),_=s.n(d);let b=(0,l.UU)("https://yfmypikqgegvookjzvyv.supabase.co",process.env.SUPABASE_SERVICE_ROLE_KEY),y=new(_())({key_id:process.env.RAZORPAY_KEY_ID,key_secret:process.env.RAZORPAY_KEY_SECRET});async function g(e){try{if(!process.env.RAZORPAY_WEBHOOK_SECRET)return console.error("Razorpay webhook secret not configured"),new a.NextResponse("Webhook secret not configured",{status:500});let t=await e.text(),s=e.headers.get("x-razorpay-signature");if(!s)return console.error("No signature found in webhook request"),new a.NextResponse("No signature found",{status:400});let r=u().createHmac("sha256",process.env.RAZORPAY_WEBHOOK_SECRET).update(t).digest("hex");if(s!==r)return console.error("Invalid webhook signature"),new a.NextResponse("Invalid signature",{status:400});let i=JSON.parse(t);switch(console.log("Webhook event:",i.event),console.log("\uD83D\uDD0D Full webhook payload:",JSON.stringify(i,null,2)),i.payload&&i.payload.payment&&i.payload.payment.entity&&console.log("\uD83D\uDD0D Payment entity:",JSON.stringify(i.payload.payment.entity,null,2)),i.payload&&i.payload.subscription&&i.payload.subscription.entity&&console.log("\uD83D\uDD0D Subscription entity:",JSON.stringify(i.payload.subscription.entity,null,2)),i.event){case"payment.captured":await m(i.payload.payment.entity);break;case"payment.failed":await f(i.payload.payment.entity);break;case"order.paid":await w(i.payload.order.entity);break;case"payment.authorized":await h(i.payload.payment.entity);break;case"subscription.activated":await S(i.payload.subscription.entity);break;case"subscription.charged":await v(i.payload.subscription.entity);break;case"subscription.halted":await D(i.payload.subscription.entity);break;case"subscription.cancelled":await k(i.payload.subscription.entity);break;case"subscription.completed":await I(i.payload.subscription.entity);break;case"subscription.paused":await O(i.payload.subscription.entity);break;case"subscription.resumed":await x(i.payload.subscription.entity);break;case"subscription.authenticated":await R(i.payload.subscription.entity);break;default:console.log("Unhandled webhook event:",i.event)}return new a.NextResponse("Received",{status:200})}catch(e){return console.error("Webhook error:",e),new a.NextResponse("Webhook processing failed",{status:500})}}async function m(e){console.log("Payment captured:",e.id);let{error:t}=await b.from("payments").update({status:"captured",updated_at:new Date().toISOString()}).eq("payment_id",e.id);t&&console.error("Failed to update payment status:",t),await q(e)}async function f(e){console.log("Payment failed:",e.id);let{error:t}=await b.from("payments").update({status:"failed",updated_at:new Date().toISOString()}).eq("payment_id",e.id);t&&console.error("Failed to update payment status:",t)}async function w(e){console.log("Order paid:",e.id);let{error:t}=await b.from("payment_orders").update({status:"paid",updated_at:new Date().toISOString()}).eq("order_id",e.id);t&&console.error("Failed to update order status:",t)}async function h(e){console.log("Payment authorized:",e.id),console.log("\uD83D\uDD0D Payment details:",{id:e.id,subscription_id:e.subscription_id,amount:e.amount,currency:e.currency,status:e.status});let{error:t}=await b.from("payments").update({status:"authorized",updated_at:new Date().toISOString()}).eq("payment_id",e.id);t&&console.error("Failed to update payment status:",t),e.subscription_id?(console.log("\uD83D\uDCCB This is a subscription payment authorization, checking for activation..."),await q(e)):(console.log("ℹ️ No subscription_id found in payment, trying to find subscription by payment ID..."),await A(e.id))}async function S(e){console.log("Subscription activated:",e.id);let{error:t}=await b.from("subscriptions").update({status:"active",updated_at:new Date().toISOString()}).eq("razorpay_subscription_id",e.id);t&&console.error("Failed to update subscription status:",t),console.log("\uD83C\uDFAF Activating user subscription from subscription.activated event..."),await z(e)}async function v(e){console.log("Subscription charged:",e.id);let{error:t}=await b.from("subscriptions").update({status:"active",current_start_date:new Date().toISOString(),current_end_date:(0,p.$A)(new Date,"monthly"),updated_at:new Date().toISOString()}).eq("razorpay_subscription_id",e.id);t&&console.error("Failed to update subscription status:",t)}async function D(e){console.log("Subscription halted:",e.id);let{error:t}=await b.from("subscriptions").update({status:"halted",updated_at:new Date().toISOString()}).eq("razorpay_subscription_id",e.id);t&&console.error("Failed to update subscription status:",t)}async function k(e){console.log("Subscription cancelled:",e.id);let{error:t}=await b.from("subscriptions").update({status:"cancelled",updated_at:new Date().toISOString()}).eq("razorpay_subscription_id",e.id);t&&console.error("Failed to update subscription status:",t)}async function I(e){console.log("Subscription completed:",e.id);let{error:t}=await b.from("subscriptions").update({status:"completed",updated_at:new Date().toISOString()}).eq("razorpay_subscription_id",e.id);t&&console.error("Failed to update subscription status:",t)}async function O(e){console.log("Subscription paused:",e.id);let{error:t}=await b.from("subscriptions").update({status:"paused",updated_at:new Date().toISOString()}).eq("razorpay_subscription_id",e.id);t&&console.error("Failed to update subscription status:",t)}async function x(e){console.log("Subscription resumed:",e.id);let{error:t}=await b.from("subscriptions").update({status:"active",updated_at:new Date().toISOString()}).eq("razorpay_subscription_id",e.id);t&&console.error("Failed to update subscription status:",t)}async function q(e){console.log("\uD83D\uDD0D Checking if payment needs subscription activation:",e.id),console.log("\uD83D\uDD0D Payment object keys:",Object.keys(e)),console.log("\uD83D\uDD0D Payment subscription_id:",e.subscription_id);try{if(e.subscription_id){console.log("\uD83D\uDCCB This is a subscription payment, getting subscription details...");let t=await y.subscriptions.fetch(e.subscription_id);console.log("\uD83D\uDCCB Subscription details:",{id:t.id,status:t.status,plan_id:t.plan_id,customer_id:t.customer_id});let s=t.plan_id.replace("plan_","").replace("_monthly","").replace("_yearly",""),r=t.plan_id.includes("_yearly")?"yearly":"monthly";console.log("\uD83D\uDCCB Extracted plan details:",{planId:s,billingCycle:r});let{data:i,error:o}=await b.from("user_profiles").select("user_id, subscription_status").eq("razorpay_subscription_id",e.subscription_id).single();if(o||!i)return void console.log("ℹ️ No user found for subscription:",e.subscription_id);if(console.log("\uD83D\uDCCB Found user for subscription:",{userId:i.user_id,currentStatus:i.subscription_status}),"pending"===i.subscription_status){console.log("\uD83C\uDFAF Activating subscription from payment webhook for user:",i.user_id);let t=E(s),{error:o}=await b.from("user_profiles").upsert({user_id:i.user_id,subscription_plan:s,subscription_status:"active",subscription_start_date:new Date().toISOString(),subscription_end_date:(0,p.$A)(new Date,r),billing_cycle:r,post_generation_credits:t.posts,image_enhancement_credits:t.enhancements,media_storage_limit:t.storage,updated_at:new Date().toISOString()},{onConflict:"user_id"});if(o)return void console.error("❌ Failed to activate user subscription from webhook:",o);let{error:n}=await b.from("subscriptions").insert({user_id:i.user_id,razorpay_subscription_id:e.subscription_id,plan_id:s,status:"active",current_start_date:new Date().toISOString(),current_end_date:(0,p.$A)(new Date,r),amount:e.amount,currency:e.currency,billing_cycle:r,updated_at:new Date().toISOString()});n&&console.error("❌ Failed to create subscription record from webhook:",n),console.log("✅ Subscription activated from payment webhook successfully!")}else console.log("ℹ️ User subscription already activated:",i.subscription_status)}else{let{data:t,error:s}=await b.from("payment_orders").select("*").eq("payment_id",e.id).single();if(s||!t)return void console.log("ℹ️ No order found for payment:",e.id);if(console.log("\uD83D\uDCCB Found order for payment:",{orderId:t.order_id,planId:t.plan_id,userId:t.user_id,status:t.status}),"paid"===t.status&&!t.plan_id.startsWith("enhancement-")&&"free"!==t.plan_id){console.log("\uD83C\uDFAF Activating subscription from payment webhook for order:",t.order_id);let e=E(t.plan_id),{error:s}=await b.from("user_profiles").upsert({user_id:t.user_id,subscription_plan:t.plan_id,subscription_status:"active",subscription_start_date:new Date().toISOString(),subscription_end_date:(0,p.$A)(new Date,t.billing_cycle),billing_cycle:t.billing_cycle,post_generation_credits:e.posts,image_enhancement_credits:e.enhancements,media_storage_limit:e.storage,updated_at:new Date().toISOString()},{onConflict:"user_id"});if(s)return void console.error("❌ Failed to activate user subscription from webhook:",s);let{error:r}=await b.from("subscriptions").insert({user_id:t.user_id,plan_id:t.plan_id,status:"active",current_start_date:new Date().toISOString(),current_end_date:(0,p.$A)(new Date,t.billing_cycle),amount:t.amount,currency:t.currency,billing_cycle:t.billing_cycle,updated_at:new Date().toISOString()});r&&console.error("❌ Failed to create subscription record from webhook:",r),console.log("✅ Subscription activated from payment webhook successfully!")}}}catch(e){console.error("❌ Error in handleSubscriptionActivationFromPayment:",e)}}async function z(e){console.log("\uD83D\uDD0D Activating subscription from subscription.activated event:",e.id);try{let t=e.plan_id.replace("plan_","").replace("_monthly","").replace("_yearly",""),s=e.plan_id.includes("_yearly")?"yearly":"monthly";console.log("\uD83D\uDCCB Extracted plan details:",{planId:t,billingCycle:s});let{data:r,error:i}=await b.from("user_profiles").select("user_id, subscription_status").eq("razorpay_subscription_id",e.id).single();if(i||!r)return void console.log("ℹ️ No user found for subscription:",e.id);if(console.log("\uD83D\uDCCB Found user for subscription:",{userId:r.user_id,currentStatus:r.subscription_status}),"pending"===r.subscription_status){console.log("\uD83C\uDFAF Activating subscription from subscription.activated event for user:",r.user_id);let i=E(t),{error:o}=await b.from("user_profiles").upsert({user_id:r.user_id,subscription_plan:t,subscription_status:"active",subscription_start_date:new Date().toISOString(),subscription_end_date:(0,p.$A)(new Date,s),billing_cycle:s,post_generation_credits:i.posts,image_enhancement_credits:i.enhancements,media_storage_limit:i.storage,updated_at:new Date().toISOString()},{onConflict:"user_id"});if(o)return void console.error("❌ Failed to activate user subscription from subscription.activated:",o);let{error:n}=await b.from("subscriptions").insert({user_id:r.user_id,razorpay_subscription_id:e.id,plan_id:t,status:"active",current_start_date:new Date().toISOString(),current_end_date:(0,p.$A)(new Date,s),amount:e.plan_amount,currency:e.currency,billing_cycle:s,updated_at:new Date().toISOString()});n&&console.error("❌ Failed to create subscription record from subscription.activated:",n),console.log("✅ Subscription activated from subscription.activated event successfully!")}else console.log("ℹ️ User subscription already activated:",r.subscription_status)}catch(e){console.error("❌ Error in handleSubscriptionActivationFromSubscription:",e)}}async function A(e){console.log("\uD83D\uDD0D Looking up subscription by payment ID:",e);try{let{data:t,error:s}=await b.from("user_profiles").select("user_id, subscription_status, razorpay_subscription_id, subscription_plan, billing_cycle").eq("subscription_status","pending");console.log("\uD83D\uDCCB All users with pending subscriptions:",t);let{data:r,error:i}=await b.from("user_profiles").select("user_id, subscription_status, razorpay_subscription_id, subscription_plan, billing_cycle").not("razorpay_subscription_id","is",null);console.log("\uD83D\uDCCB All users with razorpay_subscription_id:",r);let{data:o,error:n}=await b.from("user_profiles").select("user_id, subscription_status, razorpay_subscription_id, subscription_plan, billing_cycle").eq("subscription_status","pending").not("razorpay_subscription_id","is",null).single();if(n||!o){console.log("ℹ️ No pending subscription found in user_profiles for payment:",e),console.log("\uD83D\uDD0D Looking for recent pending subscription users...");let{data:t,error:s}=await b.from("user_profiles").select("user_id, subscription_status, razorpay_subscription_id, subscription_plan, billing_cycle, created_at").eq("subscription_status","pending").not("razorpay_subscription_id","is",null).order("created_at",{ascending:!1}).limit(5);if(console.log("\uD83D\uDCCB Recent pending subscription users:",t),s||!t||0===t.length)return void console.log("ℹ️ No recent pending subscriptions found");for(let e of t)try{console.log(`🔍 Checking subscription ${e.razorpay_subscription_id} for user ${e.user_id}`);let t=await y.subscriptions.fetch(e.razorpay_subscription_id);if(console.log(`📋 Subscription ${e.razorpay_subscription_id} status:`,t.status),"active"===t.status){console.log(`🎯 Found active subscription ${e.razorpay_subscription_id} for user ${e.user_id}`),await F(e,e.razorpay_subscription_id);return}}catch(t){console.log(`❌ Error checking subscription ${e.razorpay_subscription_id}:`,t);continue}console.log("ℹ️ No active subscription found for this payment");return}let a=o.razorpay_subscription_id;if(!a)return void console.log("ℹ️ No razorpay_subscription_id found for user:",o.user_id);await F(o,a)}catch(e){console.error("❌ Error in handleSubscriptionActivationByPaymentId:",e)}}async function F(e,t){try{console.log("\uD83D\uDCCB Activating subscription for user:",{userId:e.user_id,subscriptionId:t,plan:e.subscription_plan,billingCycle:e.billing_cycle});let s=await y.subscriptions.fetch(t);if(console.log("\uD83D\uDCCB Razorpay subscription status:",s.status),"active"===s.status){console.log("\uD83C\uDFAF Activating subscription from payment authorization for user:",e.user_id);let r=E(e.subscription_plan),{error:i}=await b.from("user_profiles").upsert({user_id:e.user_id,subscription_plan:e.subscription_plan,subscription_status:"active",subscription_start_date:new Date().toISOString(),subscription_end_date:(0,p.$A)(new Date,e.billing_cycle),billing_cycle:e.billing_cycle,post_generation_credits:r.posts,image_enhancement_credits:r.enhancements,media_storage_limit:r.storage,updated_at:new Date().toISOString()},{onConflict:"user_id"});if(i)return void console.error("❌ Failed to activate user subscription from payment ID:",i);let{error:o}=await b.from("subscriptions").insert({user_id:e.user_id,razorpay_subscription_id:t,plan_id:e.subscription_plan,status:"active",current_start_date:new Date().toISOString(),current_end_date:(0,p.$A)(new Date,e.billing_cycle),amount:s.plan_amount||99900,currency:s.currency||"INR",billing_cycle:e.billing_cycle,updated_at:new Date().toISOString()});o&&console.error("❌ Failed to create subscription record from payment ID:",o),console.log("✅ Subscription activated from payment ID successfully!")}else console.log("ℹ️ Subscription not yet active in Razorpay:",s.status)}catch(e){console.error("❌ Error in activateSubscriptionFromUserData:",e)}}async function R(e){console.log("\uD83D\uDD0D Subscription authenticated:",e.id),console.log("\uD83D\uDCCB Subscription details:",{id:e.id,status:e.status,plan_id:e.plan_id,customer_id:e.customer_id});try{let t=e.plan_id.replace("plan_","").replace("_monthly","").replace("_yearly",""),s=e.plan_id.includes("_yearly")?"yearly":"monthly";console.log("\uD83D\uDCCB Extracted plan details:",{planId:t,billingCycle:s});let{data:r,error:i}=await b.from("user_profiles").select("user_id, subscription_status").eq("razorpay_subscription_id",e.id).single();if(i||!r)return void console.log("ℹ️ No user found for subscription:",e.id);if(console.log("\uD83D\uDCCB Found user for subscription:",{userId:r.user_id,currentStatus:r.subscription_status}),"pending"===r.subscription_status){console.log("\uD83C\uDFAF Activating subscription from subscription.authenticated event for user:",r.user_id);let i=E(t);console.log("\uD83D\uDCCA Plan credits for",t,":",i);let{error:o}=await b.from("user_profiles").upsert({user_id:r.user_id,subscription_plan:t,subscription_status:"active",subscription_start_date:new Date().toISOString(),subscription_end_date:(0,p.$A)(new Date,s),billing_cycle:s,post_generation_credits:i.posts,image_enhancement_credits:i.enhancements,media_storage_limit:i.storage,updated_at:new Date().toISOString()},{onConflict:"user_id"});if(o)return void console.error("❌ Failed to activate user subscription from subscription.authenticated:",o);let{error:n}=await b.from("subscriptions").insert({user_id:r.user_id,razorpay_subscription_id:e.id,plan_id:t,status:"active",current_start_date:new Date().toISOString(),current_end_date:(0,p.$A)(new Date,s),amount:e.plan_amount||99900,currency:e.currency||"INR",billing_cycle:s,updated_at:new Date().toISOString()});n&&console.error("❌ Failed to create subscription record from subscription.authenticated:",n),console.log("✅ Subscription activated from subscription.authenticated event successfully!")}else{console.log("ℹ️ User subscription already activated:",r.subscription_status),console.log("\uD83D\uDD0D But checking if we need to update credits anyway...");let{data:e,error:s}=await b.from("user_profiles").select("subscription_plan, post_generation_credits, image_enhancement_credits").eq("user_id",r.user_id).single();if(s)return void console.error("❌ Failed to get current user data:",s);console.log("\uD83D\uDCCB Current user data:",e);let i=E(t);if(console.log("\uD83D\uDCCA Expected plan credits for",t,":",i),e.post_generation_credits!==i.posts||e.image_enhancement_credits!==i.enhancements||e.subscription_plan!==t){console.log("\uD83C\uDFAF Updating user credits and plan name...");let{error:e}=await b.from("user_profiles").update({subscription_plan:t,post_generation_credits:i.posts,image_enhancement_credits:i.enhancements,media_storage_limit:i.storage,updated_at:new Date().toISOString()}).eq("user_id",r.user_id);e?console.error("❌ Failed to update user credits:",e):console.log("✅ User credits and plan name updated successfully!")}else console.log("ℹ️ User already has correct credits and plan name")}}catch(e){console.error("❌ Error in handleSubscriptionAuthenticated:",e)}}function E(e){return({free:{posts:15,enhancements:3,storage:50,allowVideos:!1},starter:{posts:100,enhancements:30,storage:-1,allowVideos:!0},growth:{posts:300,enhancements:100,storage:-1,allowVideos:!0},scale:{posts:1e3,enhancements:500,storage:-1,allowVideos:!0}})[e]||{posts:0,enhancements:0,storage:0,allowVideos:!1}}let N=new i.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/payments/razorpay-webhook/route",pathname:"/api/payments/razorpay-webhook",filename:"route",bundlePath:"app/api/payments/razorpay-webhook/route"},resolvedPagePath:"/Users/thanveerulaklam/Desktop/Projects/Somema/somema-ai/app/api/payments/razorpay-webhook/route.ts",nextConfigOutput:"",userland:r}),{workAsyncStorage:P,workUnitAsyncStorage:$,serverHooks:C}=N;function U(){return(0,n.patchFetch)({workAsyncStorage:P,workUnitAsyncStorage:$})}},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},47990:()=>{},55511:e=>{"use strict";e.exports=require("crypto")},55591:e=>{"use strict";e.exports=require("https")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},74075:e=>{"use strict";e.exports=require("zlib")},78335:()=>{},79428:e=>{"use strict";e.exports=require("buffer")},79551:e=>{"use strict";e.exports=require("url")},81630:e=>{"use strict";e.exports=require("http")},83997:e=>{"use strict";e.exports=require("tty")},91645:e=>{"use strict";e.exports=require("net")},94735:e=>{"use strict";e.exports=require("events")},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[4447,580,6437,139,5457],()=>s(43564));module.exports=r})();